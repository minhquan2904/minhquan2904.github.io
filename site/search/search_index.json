{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"The Unbounded Realm","text":"<p>Welcome to The Unbounded Realm, where creativity knows no limits and exploration knows no bounds. Join us on a journey through the endless possibilities of programming and everyday life.</p>"},{"location":"#coding-adventures","title":"Coding Adventures","text":""},{"location":"#exploring-the-digital-wilderness","title":"Exploring the Digital Wilderness","text":"<p>Embark on a quest through the digital wilderness, where lines of code are the paths we tread and algorithms are the secrets waiting to be discovered.</p>"},{"location":"#crafting-code-poetry","title":"Crafting Code Poetry","text":"<p>Discover the beauty of code poetry, where syntax becomes art and algorithms dance in elegant harmony. Let's weave words and code into lyrical masterpieces.</p>"},{"location":"#life-chronicles","title":"Life Chronicles","text":""},{"location":"#wanderlust-chronicles","title":"Wanderlust Chronicles","text":"<p>Follow our wanderlust chronicles as we traverse the globe, seeking inspiration in the wonders of nature and the diversity of cultures.</p>"},{"location":"#gastronomic-escapades","title":"Gastronomic Escapades","text":"<p>Indulge in our gastronomic escapades, where culinary delights from every corner of the world await. Join us as we savor the flavors of life, one bite at a time.</p>"},{"location":"#musings-marvels","title":"Musings &amp; Marvels","text":""},{"location":"#philosophical-ponderings","title":"Philosophical Ponderings","text":"<p>Delve into the depths of existential ponderings and philosophical musings. Let's contemplate the mysteries of the universe and the meaning of life itself.</p>"},{"location":"#marvels-of-the-mundane","title":"Marvels of the Mundane","text":"<p>Marvel at the beauty of the mundane, where everyday moments are transformed into extraordinary experiences. Let's find wonder in the simplicity of life.</p>"},{"location":"#connect-contribute","title":"Connect &amp; Contribute","text":"<p>Join The Unbounded Realm community and share your own adventures, musings, and marvels. Together, let's create a tapestry of creativity and inspiration that knows no bounds!</p> <p>The Unbounded Realm \u00a9 2024. All rights reserved. | About</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/#dillinger","title":"Dillinger","text":""},{"location":"blog/#the-last-markdown-editor-ever","title":"The Last Markdown Editor, Ever","text":"<p>Dillinger is a cloud-enabled, mobile-ready, offline-storage compatible, AngularJS-powered HTML5 Markdown editor.</p> <ul> <li>Type some Markdown on the left</li> <li>See HTML in the right</li> <li>\u2728Magic \u2728</li> </ul>"},{"location":"blog/#features","title":"Features","text":"<ul> <li>Import a HTML file and watch it magically convert to Markdown</li> <li>Drag and drop images (requires your Dropbox account be linked)</li> <li>Import and save files from GitHub, Dropbox, Google Drive and One Drive</li> <li>Drag and drop markdown and HTML files into Dillinger</li> <li>Export documents as Markdown, HTML and PDF</li> </ul> <p>Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site</p> <p>The overriding design goal for Markdown's formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it's been marked up with tags or formatting instructions.</p> <p>This text you see here is *actually- written in Markdown! To get a feel for Markdown's syntax, type some text into the left window and watch the results in the right.</p>"},{"location":"blog/#tech","title":"Tech","text":"<p>Dillinger uses a number of open source projects to work properly:</p> <ul> <li>AngularJS - HTML enhanced for web apps!</li> <li>Ace Editor - awesome web-based text editor</li> <li>markdown-it - Markdown parser done right. Fast and easy to extend.</li> <li>Twitter Bootstrap - great UI boilerplate for modern web apps</li> <li>node.js - evented I/O for the backend</li> <li>Express - fast node.js network app framework @tjholowaychuk</li> <li>Gulp - the streaming build system</li> <li>Breakdance - HTML to Markdown converter</li> <li>jQuery - duh</li> </ul> <p>And of course Dillinger itself is open source with a public repository  on GitHub.</p>"},{"location":"blog/#installation","title":"Installation","text":"<p>Dillinger requires Node.js v10+ to run.</p> <p>Install the dependencies and devDependencies and start the server.</p> <pre><code>cd dillinger\nnpm i\nnode app\n</code></pre> <p>For production environments...</p> <pre><code>npm install --production\nNODE_ENV=production node app\n</code></pre>"},{"location":"blog/#plugins","title":"Plugins","text":"<p>Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.</p> Plugin README Dropbox plugins/dropbox/README.md GitHub plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md"},{"location":"blog/#development","title":"Development","text":"<p>Want to contribute? Great!</p> <p>Dillinger uses Gulp + Webpack for fast developing. Make a change in your file and instantaneously see your updates!</p> <p>Open your favorite Terminal and run these commands.</p> <p>First Tab:</p> <pre><code>node app\n</code></pre> <p>Second Tab:</p> <pre><code>gulp watch\n</code></pre> <p>(optional) Third:</p> <pre><code>karma test\n</code></pre>"},{"location":"blog/#building-for-source","title":"Building for source","text":"<p>For production release:</p> <pre><code>gulp build --prod\n</code></pre> <p>Generating pre-built zip archives for distribution:</p> <pre><code>gulp build dist --prod\n</code></pre>"},{"location":"blog/#docker","title":"Docker","text":"<p>Dillinger is very easy to install and deploy in a Docker container.</p> <p>By default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.</p> <pre><code>cd dillinger\ndocker build -t &lt;youruser&gt;/dillinger:${package.json.version} .\n</code></pre> <p>This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out <code>${package.json.version}</code> with the actual version of Dillinger.</p> <p>Once done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):</p> <pre><code>docker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger &lt;youruser&gt;/dillinger:${package.json.version}\n</code></pre> <p>Note: <code>--capt-add=SYS-ADMIN</code> is required for PDF rendering.</p> <p>Verify the deployment by navigating to your server address in your preferred browser.</p> <pre><code>127.0.0.1:8000\n</code></pre>"},{"location":"blog/#license","title":"License","text":"<p>MIT</p> <p>Free Software, Hell Yeah!</p>"},{"location":"posts/hello-world/","title":"Hello world!","text":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque nec maximus ex. Sed consequat, nulla quis malesuada dapibus, elit metus vehicula erat, ut egestas tellus eros at risus. In hac habitasse platea dictumst. Phasellus id lacus pulvinar erat consequat pretium. Morbi malesuada arcu mauris Nam vel justo sem. Nam placerat purus non varius luctus. Integer pretium leo in sem rhoncus, quis gravida orci mollis. Proin id aliquam est. Vivamus in nunc ac metus tristique pellentesque. Suspendisse viverra urna in accumsan aliquet.</p> <p>Donec volutpat, elit ac volutpat laoreet, turpis dolor semper nibh, et dictum massa ex pulvinar elit. Curabitur commodo sit amet dolor sed mattis. Etiam tempor odio eu nisi gravida cursus. Maecenas ante enim, fermentum sit amet molestie nec, mollis ac libero. Vivamus sagittis suscipit eros ut luctus.</p> <p>Nunc vehicula sagittis condimentum. Cras facilisis bibendum lorem et feugiat. In auctor accumsan ligula, at consectetur erat commodo quis. Morbi ac nunc pharetra, pellentesque risus in, consectetur urna. Nulla id enim facilisis arcu tincidunt pulvinar. Vestibulum laoreet risus scelerisque porta congue. In velit purus, dictum quis neque nec, molestie viverra risus. Nam pellentesque tellus id elit ultricies, vel finibus erat cursus.</p>"},{"location":"posts/Docker/","title":"content file","text":""},{"location":"posts/Docker/docker-start/","title":"Docker tutorial","text":"<p>Docker l\u00e0 m\u1ed9t n\u1ec1n t\u1ea3ng m\u1ea1nh m\u1ebd cho vi\u1ec7c x\u00e2y d\u1ef1ng, tri\u1ec3n khai v\u00e0 ch\u1ea1y c\u00e1c \u1ee9ng d\u1ee5ng trong m\u1ed9t m\u00f4i tr\u01b0\u1eddng container h\u00f3a. \u0110\u01b0\u1ee3c ph\u00e1t tri\u1ec3n b\u1edfi Docker, Inc., n\u1ec1n t\u1ea3ng n\u00e0y gi\u00fap c\u00e1c nh\u00e0 ph\u00e1t tri\u1ec3n v\u00e0 qu\u1ea3n tr\u1ecb h\u1ec7 th\u1ed1ng t\u1ea1o ra c\u00e1c m\u00f4i tr\u01b0\u1eddng c\u00f4 \u0111\u1ecdng, di \u0111\u1ed9ng v\u00e0 c\u00f3 kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng cho \u1ee9ng d\u1ee5ng c\u1ee7a h\u1ecd.</p>"},{"location":"posts/Docker/docker-start/#tai-sao-docker-quan-trong-trong-phat-trien-phan-mem-hien-ai","title":"T\u1ea1i sao Docker quan tr\u1ecdng trong ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m hi\u1ec7n \u0111\u1ea1i?","text":"<ol> <li> <p>Kh\u1ea3 n\u0103ng di \u0111\u1ed9ng v\u00e0 c\u00f4 \u0111\u1ecdng: Docker cho ph\u00e9p \u0111\u00f3ng g\u00f3i \u1ee9ng d\u1ee5ng c\u00f9ng v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c ph\u1ee5 thu\u1ed9c c\u1ee7a n\u00f3 v\u00e0o m\u1ed9t container duy nh\u1ea5t. \u0110i\u1ec1u n\u00e0y gi\u00fap \u0111\u01a1n gi\u1ea3n h\u00f3a qu\u00e1 tr\u00ecnh chuy\u1ec3n giao v\u00e0 tri\u1ec3n khai \u1ee9ng d\u1ee5ng gi\u1eefa c\u00e1c m\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n, th\u1eed nghi\u1ec7m v\u00e0 s\u1ea3n xu\u1ea5t.</p> </li> <li> <p>T\u00edch h\u1ee3p linh ho\u1ea1t: Docker c\u00f3 th\u1ec3 t\u00edch h\u1ee3p v\u1edbi c\u00e1c c\u00f4ng c\u1ee5 qu\u1ea3n l\u00fd m\u00e3 ngu\u1ed3n m\u1edf ph\u1ed5 bi\u1ebfn nh\u01b0 Git v\u00e0 c\u00e1c h\u1ec7 th\u1ed1ng CI/CD nh\u01b0 Jenkins, GitLab CI, hay CircleCI. \u0110i\u1ec1u n\u00e0y gi\u00fap t\u1ea1o ra m\u1ed9t lu\u1ed3ng l\u00e0m vi\u1ec7c li\u1ec1n m\u1ea1ch t\u1eeb vi\u1ec7c ph\u00e1t tri\u1ec3n cho \u0111\u1ebfn tri\u1ec3n khai.</p> </li> <li> <p>Hi\u1ec7u su\u1ea5t v\u00e0 ti\u1ebft ki\u1ec7m t\u00e0i nguy\u00ean: C\u00e1c container Docker chia s\u1ebb kernel c\u1ee7a h\u1ec7 \u0111i\u1ec1u h\u00e0nh v\u1edbi host, \u0111i\u1ec1u n\u00e0y gi\u00fap ti\u1ebft ki\u1ec7m t\u00e0i nguy\u00ean so v\u1edbi vi\u1ec7c ch\u1ea1y \u1ee9ng d\u1ee5ng tr\u00ean c\u00e1c m\u00e1y \u1ea3o \u0111\u1ed9c l\u1eadp. Ngo\u00e0i ra, qu\u00e1 tr\u00ecnh kh\u1edfi \u0111\u1ed9ng v\u00e0 t\u1eaft container nhanh ch\u00f3ng, gi\u00fap t\u0103ng c\u01b0\u1eddng hi\u1ec7u su\u1ea5t v\u00e0 gi\u1ea3m th\u1eddi gian tri\u1ec3n khai.</p> </li> <li> <p>M\u00f4i tr\u01b0\u1eddng \u0111\u1ed3ng nh\u1ea5t: Docker cung c\u1ea5p m\u1ed9t m\u00f4i tr\u01b0\u1eddng \u0111\u1ed3ng nh\u1ea5t gi\u1eefa c\u00e1c m\u00e1y t\u00ednh c\u00e1 nh\u00e2n, m\u00e1y ch\u1ee7 v\u00e0 m\u00f4i tr\u01b0\u1eddng \u0111\u00e1m m\u00e2y. \u0110i\u1ec1u n\u00e0y gi\u00fap \u0111\u1ea3m b\u1ea3o r\u1eb1ng \u1ee9ng d\u1ee5ng s\u1ebd ho\u1ea1t \u0111\u1ed9ng nh\u01b0 mong \u0111\u1ee3i, kh\u00f4ng ph\u1ee5 thu\u1ed9c v\u00e0o m\u00f4i tr\u01b0\u1eddng tri\u1ec3n khai c\u1ee5 th\u1ec3.</p> </li> <li> <p>T\u00edch h\u1ee3p DevOps: Docker th\u00fac \u0111\u1ea9y ph\u01b0\u01a1ng ph\u00e1p l\u00e0m vi\u1ec7c DevOps b\u1eb1ng c\u00e1ch t\u1ea1o ra m\u1ed9t quy tr\u00ecnh l\u00e0m vi\u1ec7c \u0111\u1ed3ng nh\u1ea5t t\u1eeb vi\u1ec7c ph\u00e1t tri\u1ec3n cho \u0111\u1ebfn tri\u1ec3n khai. \u0110i\u1ec1u n\u00e0y gi\u00fap t\u0103ng t\u1ed1c qu\u00e1 tr\u00ecnh ph\u00e1t tri\u1ec3n, c\u1ea3i thi\u1ec7n ch\u1ea5t l\u01b0\u1ee3ng ph\u1ea7n m\u1ec1m v\u00e0 t\u0103ng c\u01b0\u1eddng s\u1ef1 linh ho\u1ea1t trong vi\u1ec7c tri\u1ec3n khai.</p> </li> </ol> <p>Trong t\u1ed5ng th\u1ec3, Docker \u0111\u00e3 tr\u1edf th\u00e0nh m\u1ed9t c\u00f4ng ngh\u1ec7 ch\u00eca kh\u00f3a trong vi\u1ec7c x\u00e2y d\u1ef1ng v\u00e0 tri\u1ec3n khai \u1ee9ng d\u1ee5ng hi\u1ec7n \u0111\u1ea1i, gi\u00fap t\u0103ng c\u01b0\u1eddng hi\u1ec7u su\u1ea5t, t\u00ednh di \u0111\u1ed9ng v\u00e0 t\u00edch h\u1ee3p c\u1ee7a quy tr\u00ecnh ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m.</p>"}]}